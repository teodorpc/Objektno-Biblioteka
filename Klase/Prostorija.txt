interface IProstorija
{
    void DodajNoviObjekat(String Status, String Oznaka, List<String> Police, List<(String, DateTime)> Napomena);
    int IspraviPodatkeObjekta(String ID, String Status, String Oznaka, List<String> Police, List<(String, DateTime)> Napomena);
    int PromeniStatus(String ID, String Status);
}

public class Prostorija : IProstorija
{
    public List<Prostorija> ListaAktivnih { get; protected set; }
    public List<Prostorija> ListaNeaktivnih { get; protected set; }

    private static Int64 SledeciID = 0;

    public String ID { get; protected set; }
    public String Status { get; protected set; }
    public String Oznaka { get; protected set; }
    public List<String> Police { get; protected set; }
    public List<(String, DateTime)> Napomena { get; protected set; }

    public Prostorija()
    {
        ListaAktivnih = new List<Prostorija>();
        ListaNeaktivnih = new List<Prostorija>();
    }

    protected Prostorija(String ID, String Status, String Oznaka, List<String> Police, List<(String, DateTime)> Napomena)
    {
        this.ID = ID;
        this.Status = Status;
        this.Oznaka = Oznaka;
        this.Police = new List<string>();
        foreach (String s in Police)
            this.Police.Add(s);
        this.Napomena = new List<(string, DateTime)>();
        foreach ((String, DateTime) t in Napomena)
            this.Napomena.Add(t);
    }

    public void DodajNoviObjekat(String Status, String Oznaka, List<String> Police, List<(String, DateTime)> Napomena)
    {
        String ID = SledeciID.ToString();
        SledeciID++;

        if (Status == "AKTIVAN")
            ListaAktivnih.Add(new Prostorija(ID, Status, Oznaka, Police, Napomena));
        else
            ListaNeaktivnih.Add(new Prostorija(ID, Status, Oznaka, Police, Napomena));
    }

    public int IspraviPodatkeObjekta(String ID, String Status, String Oznaka, List<String> Police, List<(String, DateTime)> Napomena)
    {
        for (int i = 0; i < ListaAktivnih.Count; i++)
            if (ListaAktivnih[i].ID == ID)
            {
                ListaAktivnih.RemoveAt(i);

                if (Status == "AKTIVAN")
                    ListaAktivnih.Add(new Prostorija(ID, Status, Oznaka, Police, Napomena));
                else
                    ListaNeaktivnih.Add(new Prostorija(ID, Status, Oznaka, Police, Napomena));
                return 200;
            }

        for (int i = 0; i < ListaNeaktivnih.Count; i++)
            if (ListaAktivnih[i].ID == ID)
                return 302;

        return 404;
    }

    public int PromeniStatus(String ID, String Status)
    {
        for (int i = 0; i < ListaAktivnih.Count; i++)
        {
            Prostorija covek1 = ListaAktivnih[i];
            if (covek1.ID == ID)
            {
                covek1.Status = Status;
                if (Status != "AKTIVAN")
                {
                    ListaAktivnih.RemoveAt(i);
                    ListaNeaktivnih.Add(covek1);
                }
                return 200;
            }
        }

        for (int i = 0; i < ListaAktivnih.Count; i++)
        {
            Prostorija covek1 = ListaAktivnih[i];
            if (covek1.ID == ID)
            {
                covek1.Status = Status;
                if (Status == "AKTIVAN")
                {
                    ListaNeaktivnih.RemoveAt(i);
                    ListaAktivnih.Add(covek1);
                }
                return 200;
            }
        }

        return 404;
    }


}